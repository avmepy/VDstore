# Generated by Django 3.1.3 on 2020-11-24 13:01

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Наименование')),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(max_length=5000, null=True, verbose_name='Описание')),
                ('image', models.ImageField(upload_to='', verbose_name='Изображение')),
                ('price', models.IntegerField(verbose_name='Цена')),
                ('brand', models.CharField(max_length=150, verbose_name='Бренд')),
            ],
        ),
        migrations.CreateModel(
            name='Sale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('image', models.ImageField(upload_to='', verbose_name='Баннер')),
            ],
        ),
        migrations.CreateModel(
            name='Audio',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
                ('audio_type', models.CharField(max_length=50, verbose_name='Тип (Колонки/Наушники)')),
                ('audio_connection_type', models.CharField(max_length=50, verbose_name='Тип (Проводной/Беспроводной/)')),
                ('frequency_range', models.CharField(max_length=50, verbose_name='Диапазон частот (минимальная - максимальная)')),
                ('sensitiveness', models.IntegerField(verbose_name='Чувствительность')),
                ('resistance', models.IntegerField(verbose_name='Сопротивление')),
                ('weight', models.IntegerField(verbose_name='Вес')),
            ],
            bases=('store.product',),
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
                ('material', models.CharField(max_length=50, verbose_name='Материал корпуса')),
                ('cpu', models.CharField(max_length=50, verbose_name='Процессор')),
                ('ram', models.IntegerField(verbose_name='Оперативная память')),
                ('mem', models.IntegerField(verbose_name='Встроенная память')),
                ('mem_type', models.CharField(max_length=50, verbose_name='Тип встроенной памяти (SSD/HDD)')),
                ('gpu', models.CharField(max_length=50, verbose_name='Видеокарта')),
                ('gpu_type', models.CharField(max_length=50, verbose_name='Тип видеокарты (Дискретная/Интегрированная)')),
                ('weight', models.IntegerField(verbose_name='Вес')),
            ],
            bases=('store.product',),
        ),
        migrations.CreateModel(
            name='Laptop',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
                ('display_diagonal', models.FloatField(verbose_name='Диагональ экрана')),
                ('display_type', models.CharField(max_length=50, verbose_name='Тип дисплея')),
                ('material', models.CharField(max_length=50, verbose_name='Материал корпуса')),
                ('cpu', models.CharField(max_length=50, verbose_name='Процессор')),
                ('ram', models.IntegerField(verbose_name='Оперативная память')),
                ('mem', models.IntegerField(verbose_name='Встроенная память')),
                ('mem_type', models.CharField(max_length=50, verbose_name='Тип встроенной памяти (SSD/HDD)')),
                ('gpu', models.CharField(max_length=50, verbose_name='Видеокарта')),
                ('gpu_type', models.CharField(max_length=50, verbose_name='Тип видеокарты (Дискретная/Интегрированная)')),
                ('weight', models.IntegerField(verbose_name='Вес')),
            ],
            bases=('store.product',),
        ),
        migrations.CreateModel(
            name='SmartPhone',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
                ('water_resist', models.CharField(max_length=50, verbose_name='Стандарт защиты от воды')),
                ('weight', models.IntegerField(verbose_name='Вес')),
                ('color', models.CharField(max_length=50, verbose_name='Цвет')),
                ('display_type', models.CharField(max_length=50, verbose_name='Тип экрана')),
                ('display_diagonal', models.FloatField(verbose_name='Диагональ экрана')),
                ('main_camera', models.IntegerField(verbose_name='Разрешение основной камеры')),
                ('front_camera', models.IntegerField(verbose_name='Разрешение фронтальной камеры')),
                ('cpu', models.CharField(max_length=50, verbose_name='Процессор')),
                ('ram', models.IntegerField(verbose_name='Оперативная память')),
                ('ssd', models.IntegerField(verbose_name='Встроенная память')),
                ('system', models.CharField(max_length=50, verbose_name='Платформа')),
            ],
            bases=('store.product',),
        ),
        migrations.CreateModel(
            name='SmartWatch',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
                ('sex', models.CharField(max_length=50, verbose_name='Для кого (Мужские/Женские/Унисекс)')),
                ('system', models.CharField(max_length=50, verbose_name='Платформа')),
                ('cpu', models.CharField(max_length=50, verbose_name='Процессор')),
                ('material', models.CharField(max_length=50, verbose_name='Материал корпуса')),
                ('display_type', models.CharField(max_length=50, verbose_name='Тип экрана')),
                ('display_diagonal', models.FloatField(verbose_name='Диагональ экрана')),
                ('weight', models.IntegerField(verbose_name='Вес')),
            ],
            bases=('store.product',),
        ),
        migrations.CreateModel(
            name='Tablet',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
                ('weight', models.IntegerField(verbose_name='Вес')),
                ('color', models.CharField(max_length=50, verbose_name='Цвет')),
                ('display_type', models.CharField(max_length=50, verbose_name='Тип экрана')),
                ('display_diagonal', models.FloatField(verbose_name='Диагональ экрана')),
                ('cpu', models.CharField(max_length=50, verbose_name='Процессор')),
                ('ram', models.IntegerField(verbose_name='Оперативная память')),
                ('ssd', models.IntegerField(verbose_name='Встроенная память')),
                ('system', models.CharField(max_length=50, verbose_name='Платформа')),
            ],
            bases=('store.product',),
        ),
        migrations.CreateModel(
            name='TV',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='store.product')),
            ],
            bases=('store.product',),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('pub_date', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.product')),
            ],
            options={
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.ManyToManyField(to='store.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.profile')),
            ],
        ),
    ]
